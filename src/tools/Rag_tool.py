from langchain.tools import tool
from src.Pipeline.Rag_Pipeline import Ragpipeline

# Load once and reuse
rag_instance = Ragpipeline().pipeline()

@tool
def rag_query_tool(query: str) -> str:
    """
    Answers questions by performing a Retrieval-Augmented Generation (RAG) query
    against the HTS General Notes context.

    This tool is designed to provide comprehensive and contextually relevant answers
    to questions related to the Harmonized Tariff Schedule (HTS) General Notes,
    leveraging a RAG system for accurate information retrieval and generation.

    Args:
        query (str): The question to be answered, related to the HTS General Notes.
                     Example: "According to General Rule of Interpretation 2(a),
                     under what condition can an incomplete or unfinished article
                     be classified as a complete or finished article?"

    Returns:
        str: The answer generated by the RAG system based on the provided query
             and the HTS General Notes context. Returns an error message if the
             RAG query fails.

    Example:
        >>> rag_query_tool("What is the purpose of General Note 1?")
        'General Note 1 provides the legal basis for the classification of goods
        in the Harmonized Tariff Schedule of the United States (HTSUS).'
    """
    try:
        return rag_instance.invoke(query)
    except Exception as e:
        return f"RAG Error: {e}"
